
# Case Characteristics by Office Type

```{r , include = F, echo=F}

#Plot shares of SNAP cases near offices and affected by closures

var <- c(rep("100<%FPL<130", 6), 
         rep("50<%FPL<100" , 6),
         rep("0<%FPL<50" , 6),
         rep("No Income" , 6))

factor_var <- factor(var, 
                     order = TRUE,
                     levels =c('100<%FPL<130',
                               '50<%FPL<100',
                               '0<%FPL<50',
                               'No Income'))
condition <- rep(c('Urban: Any',
                   'Urban, Closed: 0-1 Miles',
                   'Urban, Open: 0-1 Miles',
                   'Rural: Any',
                   'Rural, Closed: 0-1 Miles',
                   'Rural, Open: 0-1 Miles') , 4)
factor_condition <- factor(condition, 
                           order = TRUE,
                           levels =c('Urban: Any',
                                     'Urban, Closed: 0-1 Miles',
                                     'Urban, Open: 0-1 Miles',
                                     'Rural: Any',
                                     'Rural, Closed: 0-1 Miles',
                                     'Rural, Open: 0-1 Miles'))
#Coordflip reverses everything, so input the right way and flip it
value <- rev(c(
                .42,.45,.28,.29,.38,.24, #0
                .16,.15,.19,.21,.18,.23, #50
                .27,.27,.36,.34,.31,.38, #100
                .1,.08,.12,.11,.09,.11 #130                
)) 
data <- data.frame(factor_var,factor_condition,value) 

char4 <- ggplot(data, aes(fill=factor_condition, y=value, x=factor_var)) + 
  geom_bar(position="dodge", stat="identity") + 
  scale_fill_manual("legend", values = c("Rural, Open: 0-1 Miles" = "#C72100",
                                         "Rural, Closed: 0-1 Miles" = "#F36E26",
                                         "Rural: Any" = "#FCC19F",
                                         "Urban, Open: 0-1 Miles" = "#07218A",
                                         "Urban, Closed: 0-1 Miles" = "#4463DF",
                                         "Urban: Any" = "#94A5E7"),
                    breaks = c("Rural, Open: 0-1 Miles","Rural, Closed: 0-1 Miles","Rural: Any","Urban, Open: 0-1 Miles","Urban, Closed: 0-1 Miles","Urban: Any")) +
  coord_flip() +
  scale_y_continuous(name = 'Share')  +
  theme(axis.title.y=element_blank(), legend.title = element_blank(),
        plot.title = element_text(size = 15, face = "bold"),
        axis.text=element_text(size=12),
        axis.title=element_text(size=14,face="bold")
  )

char4
ggsave(
  "char4.png",
  path = 'C:/Users/Jason/Box/SNAP/Distance/Presentation/figs',
  width = 18,height = 8,units = c("cm")
)
```

.center[![:scale 100%](figs/char4.png)]

- Households without income much more likely to live near SNAP offices

- Also much more likely to live near .hi[closing] SNAP office in urban counties




---

```{r , include = F, echo=F}
#Make Event Study Plot
etime <- c(-3,-2,-1,0,1,2,3)
beta <- c(0.1,-0.02,0,6.9,5.9,6.2,6.3)
stderr <- c(0.3,0.2,0,0.1,0.3,0.4,0.02)
df <- data.frame(etime, beta, stderr) 

es1 <- ggplot(df,aes(etime, beta)) + 
  geom_ribbon(aes(ymin = beta - 1.96*stderr,
                  ymax = beta + 1.96*stderr),    # shadowing cnf intervals
              fill = "steelblue2", alpha=0.4) + 
  geom_line(color = "steelblue4",
            size = .2) +
  geom_vline(xintercept = -1, size=0.05, alpha=0.5) + 
  geom_hline(yintercept = 0, size=.05, alpha=0.5) +
  theme_bw() +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        axis.title.y=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        panel.border = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()
        ) 

ggsave(
  "es1.png",
  path = 'C:/Users/Jason/Box/SNAP/Distance/Presentation/',
  width = 1.4,height = 1,units = c("cm"), dpi=1400
)      

beta <- c(0.1,-0.02,0,16.9,15.9,16.2,16.3)
stderr <- c(0.3,0.2,0,0.1,0.3,0.4,0.02)
df <- data.frame(etime, beta, stderr) 

es2 <- ggplot(df,aes(etime, beta)) + 
  geom_ribbon(aes(ymin = beta - 1.96*stderr,
                  ymax = beta + 1.96*stderr),    # shadowing cnf intervals
              fill = "steelblue2", alpha=0.4) + 
  geom_line(color = "steelblue4",
            size = .2) +
  geom_vline(xintercept = -1, size=0.05, alpha=0.5) + 
  geom_hline(yintercept = 0, size=.05, alpha=0.5) +
  theme_bw() +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        axis.title.y=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        panel.border = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()
        ) 

ggsave(
  "es2.png",
  path = 'C:/Users/Jason/Box/SNAP/Distance/Presentation/',
  width = 1.4,height = 1,units = c("cm"), dpi=1400
)    

beta <- c(0.5,-0.6,0,-5,-5.9,-6.2,-6.3)
stderr <- c(0.3,0.2,0,0.1,0.3,0.4,0.02)
df <- data.frame(etime, beta, stderr) 

es3 <- ggplot(df,aes(etime, beta)) + 
  geom_ribbon(aes(ymin = beta - 1.96*stderr,
                  ymax = beta + 1.96*stderr),    # shadowing cnf intervals
              fill = "steelblue2", alpha=0.4) + 
  geom_line(color = "steelblue4",
            size = .2) +
  geom_vline(xintercept = -1, size=0.05, alpha=0.5) + 
  geom_hline(yintercept = 0, size=.05, alpha=0.5) +
  theme_bw() +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        axis.title.y=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        panel.border = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()
        ) 

ggsave(
  "es3.png",
  path = 'C:/Users/Jason/Box/SNAP/Distance/Presentation/',
  width = 1.4,height = 1,units = c("cm"), dpi=1400
)   

#Note to self: Probably should make these plots in Stata and them load them in below instead
```
```{r , echo = F}
knitr::include_graphics("es1.png")
```
